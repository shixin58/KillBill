apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.bride.plugin.MyPlugin'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.bride.demon"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    signingConfigs {
        release {
            storeFile file('../sign/jacob.keystore')
            storePassword '123456'
            keyAlias 'max'
            keyPassword '123456'
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix = '.debug'

            signingConfig signingConfigs.release
        }
        release {
            applicationIdSuffix = ''

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true

            zipAlignEnabled true

            signingConfig signingConfigs.release
        }
    }
    dexOptions {
        // OutOfMemoryError:GC overhead limit exceeded
        javaMaxHeapSize "4g"
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation group: 'com.android.support', name: 'multidex', version: '1.0.3'

    implementation group: "androidx.appcompat", name: 'appcompat', version: appcompatVersion
    implementation group: "androidx.constraintlayout", name: 'constraintlayout', version: constraintLayoutVersion

    implementation group: "com.google.android.material", name: 'material', version: materialVersion
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7', version: kotlinVersion
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.1.1'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion

    debugImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android', version: '1.6.3'
    releaseImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-android-no-op', version: '1.6.3'
    debugImplementation group: 'com.squareup.leakcanary', name: 'leakcanary-support-fragment', version: '1.6.3'

    implementation group: 'com.github.markzhai', name: 'blockcanary-android', version: '1.5.0'

    implementation group: 'com.github.bumptech.glide', name: 'glide', version: '4.9.0'
    annotationProcessor group: 'com.github.bumptech.glide', name: 'compiler', version: '4.9.0'
    implementation 'jp.wasabeef:glide-transformations:4.0.0'

    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    api 'cn.rongcloud.sdk:im_kit:2.9.20'
    //im_kit必须依赖im_lib，所以需要加入对应依赖
    api 'cn.rongcloud.sdk:im_lib:2.9.20'

    implementation project(':baselib')
    implementation project(':ui_lib')
}

apply plugin: CustomPlugin

class CustomPlugin implements Plugin<Project> {

    @Override
    void apply(Project target) {
        target.task('print_info') {
            println "创建自定义插件"
        }
    }
}