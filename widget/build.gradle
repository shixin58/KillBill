apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    namespace "com.bride.widget"
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.bride.widget"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
    }

    // dataBinding
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    signingConfigs {
        release {
            storeFile file('../sign/widget.keystore')
            storePassword '123456'
            keyAlias 'light'
            keyPassword '123456'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            applicationIdSuffix = '.debug'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // dataBinding
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain(17)
    }
    ndkVersion ndk_version

    /*flavorDimensions "abi"
    productFlavors {
        armeabi_v7a {
            dimension 'abi'
            ndk {
                abiFilters "armeabi-v7a"
            }
        }
        arm64_v8a {
            dimension 'abi'
            ndk {
                abiFilters "arm64-v8a"
            }
        }
        x86 {
            dimension "abi"
            ndk {
                abiFilters "x86"
            }
        }
        x86_64 {
            dimension 'abi'
            ndk {
                abiFilters "x86_64"
            }
        }
    }*/
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"

    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "com.google.android.material:material:$material_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation "androidx.core:core-ktx:$core_version"

//    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "io.github.scwang90:refresh-layout-kernel:$smart_refresh_layout_version" // 核心必须依赖
    implementation "io.github.scwang90:refresh-header-classics:$smart_refresh_layout_version" // 经典刷新头
    implementation "io.github.scwang90:refresh-header-radar:$smart_refresh_layout_version" // 雷达刷新头
    implementation "io.github.scwang90:refresh-header-falsify:$smart_refresh_layout_version" // 虚拟刷新头
    implementation "io.github.scwang90:refresh-header-material:$smart_refresh_layout_version" // 谷歌刷新头
    implementation "io.github.scwang90:refresh-header-two-level:$smart_refresh_layout_version" // 二级刷新头
    implementation "io.github.scwang90:refresh-footer-ball:$smart_refresh_layout_version" // 球脉冲加载
    implementation "io.github.scwang90:refresh-footer-classics:$smart_refresh_layout_version" // 经典加载

    implementation "com.airbnb.android:lottie:$lottie_version"

    implementation "org.greenrobot:eventbus:$eventbus_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "androidx.webkit:webkit:1.6.1"

    implementation project(':baselib')
    implementation project(':ui_lib')
}
